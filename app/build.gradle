plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("androidx.navigation.safeargs")
    id("com.google.devtools.ksp") version "1.7.10-1.0.6"

}

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.shoestore"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    kotlinOptions{
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel:2.6.0-alpha02")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata:2.6.0-alpha02")
    // Lifecycles only (without ViewModel or LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime:2.6.0-alpha02")

    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.0-alpha02")
    implementation 'androidx.room:room-common:2.3.0'
    implementation 'androidx.room:room-ktx:2.3.0'

    // Annotation processor
//    annotationProcessor("androidx.lifecycle:lifecycle-compiler:2.6.0-alpha02")
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation("androidx.lifecycle:lifecycle-common-java8:2.6.0-alpha02")

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    implementation 'androidx.leanback:leanback:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation("androidx.room:room-runtime:2.4.3")
    annotationProcessor("androidx.room:room-compiler:2.4.3")

    implementation("androidx.recyclerview:recyclerview:1.2.1")
    // For control over item selection of both touch and mouse driven selection
    implementation("androidx.recyclerview:recyclerview-selection:1.1.0")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.4.3")

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"

    //Moshi
    implementation "com.squareup.moshi:moshi:1.9.3"
    implementation "com.squareup.moshi:moshi-kotlin:1.9.3"

    // Moshi Converter
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    // Retrofit Coroutines Support
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"


    //Glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'

    implementation 'com.android.volley:volley:1.2.1'

//    implementation "android.arch.work:work-runtime-ktx:1.0.1"
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    implementation 'com.squareup.picasso:picasso:2.5.2'
}